import logging
from sqlalchemy.ext.asyncio import AsyncSession
from sqlalchemy import select, delete
from aiogram import Bot

from app.config import settings
from app.database.crud.user import add_user_balance, get_user_by_id
from app.database.crud.referral import create_referral_earning
from app.database.models import TransactionType, ReferralEarning

logger = logging.getLogger(__name__)


async def send_referral_notification(
    bot: Bot,
    user_id: int,
    message: str
):
    try:
        await bot.send_message(user_id, message, parse_mode="HTML")
        logger.info(f"‚úÖ –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user_id}")
    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user_id}: {e}")


async def process_referral_registration(
    db: AsyncSession,
    new_user_id: int,
    referrer_id: int,
    bot: Bot = None
):
    try:
        new_user = await get_user_by_id(db, new_user_id)
        referrer = await get_user_by_id(db, referrer_id)
        
        if not new_user or not referrer:
            logger.error(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã: new_user_id={new_user_id}, referrer_id={referrer_id}")
            return False
        
        if new_user.referred_by_id != referrer_id:
            logger.error(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {new_user_id} –Ω–µ –ø—Ä–∏–≤—è–∑–∞–Ω –∫ —Ä–µ—Ñ–µ—Ä–µ—Ä—É {referrer_id}")
            return False
        
        await create_referral_earning(
            db=db,
            user_id=referrer_id,
            referral_id=new_user_id,
            amount_kopeks=0,
            reason="referral_registration_pending"
        )
        
        if bot:
            referral_notification = (
                f"üéâ <b>–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å!</b>\n\n"
                f"–í—ã –ø–µ—Ä–µ—à–ª–∏ –ø–æ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π —Å—Å—ã–ª–∫–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è <b>{referrer.full_name}</b>!\n\n"
                f"üí∞ –ü—Ä–∏ –ø–µ—Ä–≤–æ–º –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–∏ –æ—Ç {settings.format_price(settings.REFERRAL_MINIMUM_TOPUP_KOPEKS)} "
                f"–≤—ã –ø–æ–ª—É—á–∏—Ç–µ –±–æ–Ω—É—Å {settings.format_price(settings.REFERRAL_FIRST_TOPUP_BONUS_KOPEKS)}!\n\n"
                # f"üéÅ –í–∞—à —Ä–µ—Ñ–µ—Ä–µ—Ä —Ç–∞–∫–∂–µ –ø–æ–ª—É—á–∏—Ç –Ω–∞–≥—Ä–∞–¥—É –∑–∞ –≤–∞—à–µ –ø–µ—Ä–≤–æ–µ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–µ."
            )
            await send_referral_notification(bot, new_user.telegram_id, referral_notification)
            
            inviter_notification = (
                f"üë• <b>–ù–æ–≤—ã–π —Ä–µ—Ñ–µ—Ä–∞–ª!</b>\n\n"
                f"–ü–æ –≤–∞—à–µ–π —Å—Å—ã–ª–∫–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–ª—Å—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å <b>{new_user.full_name}</b>!\n\n"
                f"üí∞ –ö–æ–≥–¥–∞ –æ–Ω –ø–æ–ø–æ–ª–Ω–∏—Ç –±–∞–ª–∞–Ω—Å –æ—Ç {settings.format_price(settings.REFERRAL_MINIMUM_TOPUP_KOPEKS)}, "
                f"–≤—ã –ø–æ–ª—É—á–∏—Ç–µ –º–∏–Ω–∏–º—É–º {settings.format_price(settings.REFERRAL_INVITER_BONUS_KOPEKS)} –∏–ª–∏ "
                f"{settings.REFERRAL_COMMISSION_PERCENT}% –æ—Ç —Å—É–º–º—ã (—á—Ç–æ –±–æ–ª—å—à–µ).\n\n"
                f"üìà –° –∫–∞–∂–¥–æ–≥–æ –ø–æ—Å–ª–µ–¥—É—é—â–µ–≥–æ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è –≤—ã –±—É–¥–µ—Ç–µ –ø–æ–ª—É—á–∞—Ç—å {settings.REFERRAL_COMMISSION_PERCENT}% –∫–æ–º–∏—Å—Å–∏–∏."
            )
            await send_referral_notification(bot, referrer.telegram_id, inviter_notification)
        
        logger.info(f"‚úÖ –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω —Ä–µ—Ñ–µ—Ä–∞–ª {new_user_id} –¥–ª—è {referrer_id}. –ë–æ–Ω—É—Å—ã –±—É–¥—É—Ç –≤—ã–¥–∞–Ω—ã –ø–æ—Å–ª–µ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è.")
        return True
        
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏: {e}")
        return False


async def process_referral_topup(
    db: AsyncSession,
    user_id: int, 
    topup_amount_kopeks: int,
    bot: Bot = None
):
    try:
        user = await get_user_by_id(db, user_id)
        if not user or not user.referred_by_id:
            logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_id} –Ω–µ —è–≤–ª—è–µ—Ç—Å—è —Ä–µ—Ñ–µ—Ä–∞–ª–æ–º")
            return True
        
        if topup_amount_kopeks < settings.REFERRAL_MINIMUM_TOPUP_KOPEKS:
            logger.info(f"–ü–æ–ø–æ–ª–Ω–µ–Ω–∏–µ {user_id} –Ω–∞ {topup_amount_kopeks/100}‚ÇΩ –º–µ–Ω—å—à–µ –º–∏–Ω–∏–º—É–º–∞")
            return True
        
        referrer = await get_user_by_id(db, user.referred_by_id)
        if not referrer:
            logger.error(f"–†–µ—Ñ–µ—Ä–µ—Ä {user.referred_by_id} –Ω–µ –Ω–∞–π–¥–µ–Ω")
            return False
        
        if not user.has_made_first_topup:
            user.has_made_first_topup = True
            await db.commit()
            
            try:
                await db.execute(
                    delete(ReferralEarning).where(
                        ReferralEarning.user_id == referrer.id,
                        ReferralEarning.referral_id == user.id, 
                        ReferralEarning.reason == "referral_registration_pending"
                    )
                )
                await db.commit()
                logger.info(f"üóëÔ∏è –£–¥–∞–ª–µ–Ω–∞ –∑–∞–ø–∏—Å—å '–æ–∂–∏–¥–∞–Ω–∏–µ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è' –¥–ª—è —Ä–µ—Ñ–µ—Ä–∞–ª–∞ {user.id}")
            except Exception as e:
                logger.error(f"–û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è –∑–∞–ø–∏—Å–∏ –æ–∂–∏–¥–∞–Ω–∏—è: {e}")
            
            if settings.REFERRAL_FIRST_TOPUP_BONUS_KOPEKS > 0:
                await add_user_balance(
                    db, user, settings.REFERRAL_FIRST_TOPUP_BONUS_KOPEKS,
                    f"–ë–æ–Ω—É—Å –∑–∞ –ø–µ—Ä–≤–æ–µ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–µ –ø–æ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π –ø—Ä–æ–≥—Ä–∞–º–º–µ",
                    bot=bot
                )
                logger.info(f"üí∞ –†–µ—Ñ–µ—Ä–∞–ª {user.id} –ø–æ–ª—É—á–∏–ª –±–æ–Ω—É—Å {settings.REFERRAL_FIRST_TOPUP_BONUS_KOPEKS/100}‚ÇΩ")
                
                if bot:
                    bonus_notification = (
                        f"üéâ <b>–ë–æ–Ω—É—Å –ø–æ–ª—É—á–µ–Ω!</b>\n\n"
                        f"–ó–∞ –ø–µ—Ä–≤–æ–µ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–µ –≤—ã –ø–æ–ª—É—á–∏–ª–∏ –±–æ–Ω—É—Å "
                        f"{settings.format_price(settings.REFERRAL_FIRST_TOPUP_BONUS_KOPEKS)}!\n\n"
                        f"üíé –°—Ä–µ–¥—Å—Ç–≤–∞ –∑–∞—á–∏—Å–ª–µ–Ω—ã –Ω–∞ –≤–∞—à –±–∞–ª–∞–Ω—Å."
                    )
                    await send_referral_notification(bot, user.telegram_id, bonus_notification)
            
            commission_amount = int(topup_amount_kopeks * settings.REFERRAL_COMMISSION_PERCENT / 100)
            inviter_bonus = max(settings.REFERRAL_INVITER_BONUS_KOPEKS, commission_amount)

            if inviter_bonus > 0:
                await add_user_balance(
                    db, referrer, inviter_bonus,
                    f"–ë–æ–Ω—É—Å –∑–∞ –ø–µ—Ä–≤–æ–µ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–µ —Ä–µ—Ñ–µ—Ä–∞–ª–∞ {user.full_name}",
                    bot=bot
                )

                await create_referral_earning(
                    db=db,
                    user_id=referrer.id,
                    referral_id=user.id,
                    amount_kopeks=inviter_bonus,
                    reason="referral_first_topup"
                )
                logger.info(f"üí∞ –†–µ—Ñ–µ—Ä–µ—Ä {referrer.telegram_id} –ø–æ–ª—É—á–∏–ª –±–æ–Ω—É—Å {inviter_bonus/100}‚ÇΩ")

                if bot:
                    inviter_bonus_notification = (
                        f"üí∞ <b>–†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è –Ω–∞–≥—Ä–∞–¥–∞!</b>\n\n"
                        f"–í–∞—à —Ä–µ—Ñ–µ—Ä–∞–ª <b>{user.full_name}</b> —Å–¥–µ–ª–∞–ª –ø–µ—Ä–≤–æ–µ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–µ!\n\n"
                        f"üéÅ –í—ã –ø–æ–ª—É—á–∏–ª–∏ –Ω–∞–≥—Ä–∞–¥—É: {settings.format_price(inviter_bonus)}\n\n"
                        f"üìà –¢–µ–ø–µ—Ä—å —Å –∫–∞–∂–¥–æ–≥–æ –µ–≥–æ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è –≤—ã –±—É–¥–µ—Ç–µ –ø–æ–ª—É—á–∞—Ç—å {settings.REFERRAL_COMMISSION_PERCENT}% –∫–æ–º–∏—Å—Å–∏–∏."
                    )
                    await send_referral_notification(bot, referrer.telegram_id, inviter_bonus_notification)
        
        else:
            if settings.REFERRAL_COMMISSION_PERCENT > 0:
                commission_amount = int(topup_amount_kopeks * settings.REFERRAL_COMMISSION_PERCENT / 100)
                
                if commission_amount > 0:
                    await add_user_balance(
                        db, referrer, commission_amount,
                        f"–ö–æ–º–∏—Å—Å–∏—è {settings.REFERRAL_COMMISSION_PERCENT}% —Å –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è {user.full_name}",
                        bot=bot
                    )
                    
                    await create_referral_earning(
                        db=db,
                        user_id=referrer.id,
                        referral_id=user.id,
                        amount_kopeks=commission_amount,
                        reason="referral_commission_topup"
                    )
                    
                    logger.info(f"üí∞ –ö–æ–º–∏—Å—Å–∏—è —Å –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è: {referrer.telegram_id} –ø–æ–ª—É—á–∏–ª {commission_amount/100}‚ÇΩ")
                    
                    if bot:
                        commission_notification = (
                            f"üí∞ <b>–†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è –∫–æ–º–∏—Å—Å–∏—è!</b>\n\n"
                            f"–í–∞—à —Ä–µ—Ñ–µ—Ä–∞–ª <b>{user.full_name}</b> –ø–æ–ø–æ–ª–Ω–∏–ª –±–∞–ª–∞–Ω—Å –Ω–∞ "
                            f"{settings.format_price(topup_amount_kopeks)}\n\n"
                            f"üéÅ –í–∞—à–∞ –∫–æ–º–∏—Å—Å–∏—è ({settings.REFERRAL_COMMISSION_PERCENT}%): "
                            f"{settings.format_price(commission_amount)}\n\n"
                            f"üíé –°—Ä–µ–¥—Å—Ç–≤–∞ –∑–∞—á–∏—Å–ª–µ–Ω—ã –Ω–∞ –≤–∞—à –±–∞–ª–∞–Ω—Å."
                        )
                        await send_referral_notification(bot, referrer.telegram_id, commission_notification)
        
        return True
        
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è —Ä–µ—Ñ–µ—Ä–∞–ª–∞: {e}")
        return False


async def process_referral_purchase(
    db: AsyncSession,
    user_id: int,
    purchase_amount_kopeks: int,
    transaction_id: int = None,
    bot: Bot = None
):
    try:
        user = await get_user_by_id(db, user_id)
        if not user or not user.referred_by_id:
            return True
        
        referrer = await get_user_by_id(db, user.referred_by_id)
        if not referrer:
            logger.error(f"–†–µ—Ñ–µ—Ä–µ—Ä {user.referred_by_id} –Ω–µ –Ω–∞–π–¥–µ–Ω")
            return False
        
        if not (0 <= settings.REFERRAL_COMMISSION_PERCENT <= 100):
            logger.error(f"‚ùå –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê: REFERRAL_COMMISSION_PERCENT = {settings.REFERRAL_COMMISSION_PERCENT} –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π!")
            commission_percent = 10 
        else:
            commission_percent = settings.REFERRAL_COMMISSION_PERCENT
            
        commission_amount = int(purchase_amount_kopeks * commission_percent / 100)
        
        if commission_amount > 0:
            await add_user_balance(
                db, referrer, commission_amount,
                f"–ö–æ–º–∏—Å—Å–∏—è {commission_percent}% —Å –ø–æ–∫—É–ø–∫–∏ {user.full_name}",
                bot=bot
            )
            
            await create_referral_earning(
                db=db,
                user_id=referrer.id,
                referral_id=user.id, 
                amount_kopeks=commission_amount,
                reason="referral_commission",
                referral_transaction_id=transaction_id
            )
            
            logger.info(f"üí∞ –ö–æ–º–∏—Å—Å–∏—è —Å –ø–æ–∫—É–ø–∫–∏: {referrer.telegram_id} –ø–æ–ª—É—á–∏–ª {commission_amount/100}‚ÇΩ")
            
            if bot:
                purchase_commission_notification = (
                    f"üí∞ <b>–ö–æ–º–∏—Å—Å–∏—è —Å –ø–æ–∫—É–ø–∫–∏!</b>\n\n"
                    f"–í–∞—à —Ä–µ—Ñ–µ—Ä–∞–ª <b>{user.full_name}</b> —Å–æ–≤–µ—Ä—à–∏–ª –ø–æ–∫—É–ø–∫—É –Ω–∞ "
                    f"{settings.format_price(purchase_amount_kopeks)}\n\n"
                    f"üéÅ –í–∞—à–∞ –∫–æ–º–∏—Å—Å–∏—è ({commission_percent}%): "
                    f"{settings.format_price(commission_amount)}\n\n"
                    f"üíé –°—Ä–µ–¥—Å—Ç–≤–∞ –∑–∞—á–∏—Å–ª–µ–Ω—ã –Ω–∞ –≤–∞—à –±–∞–ª–∞–Ω—Å."
                )
                await send_referral_notification(bot, referrer.telegram_id, purchase_commission_notification)
        
        if not user.has_had_paid_subscription:
            user.has_had_paid_subscription = True
            await db.commit()
            logger.info(f"‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_id} –æ—Ç–º–µ—á–µ–Ω –∫–∞–∫ –∏–º–µ–≤—à–∏–π –ø–ª–∞—Ç–Ω—É—é –ø–æ–¥–ø–∏—Å–∫—É")
        
        return True
        
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –ø–æ–∫—É–ø–∫–∏ —Ä–µ—Ñ–µ—Ä–∞–ª–∞: {e}")
        import traceback
        logger.error(f"–ü–æ–ª–Ω—ã–π traceback: {traceback.format_exc()}")
        return False
