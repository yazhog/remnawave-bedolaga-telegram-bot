import logging
from aiogram import Dispatcher, types, F
from sqlalchemy.ext.asyncio import AsyncSession
import datetime

from app.config import settings
from app.database.models import User
from app.localization.texts import get_texts
from app.database.crud.referral import get_referral_statistics, get_user_referral_stats
from app.database.crud.user import get_user_by_id
from app.utils.decorators import admin_required, error_handler

logger = logging.getLogger(__name__)


@admin_required
@error_handler
async def show_referral_statistics(
    callback: types.CallbackQuery,
    db_user: User,
    db: AsyncSession
):
    try:
        stats = await get_referral_statistics(db)
        
        avg_per_referrer = 0
        if stats.get('active_referrers', 0) > 0:
            avg_per_referrer = stats.get('total_paid_kopeks', 0) / stats['active_referrers']
        
        current_time = datetime.datetime.now().strftime("%H:%M:%S")
        
        text = f"""
ü§ù <b>–†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞</b>

<b>–û–±—â–∏–µ –ø–æ–∫–∞–∑–∞—Ç–µ–ª–∏:</b>
- –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å —Ä–µ—Ñ–µ—Ä–∞–ª–∞–º–∏: {stats.get('users_with_referrals', 0)}
- –ê–∫—Ç–∏–≤–Ω—ã—Ö —Ä–µ—Ñ–µ—Ä–µ—Ä–æ–≤: {stats.get('active_referrers', 0)}
- –í—ã–ø–ª–∞—á–µ–Ω–æ –≤—Å–µ–≥–æ: {settings.format_price(stats.get('total_paid_kopeks', 0))}

<b>–ó–∞ –ø–µ—Ä–∏–æ–¥:</b>
- –°–µ–≥–æ–¥–Ω—è: {settings.format_price(stats.get('today_earnings_kopeks', 0))}
- –ó–∞ –Ω–µ–¥–µ–ª—é: {settings.format_price(stats.get('week_earnings_kopeks', 0))}
- –ó–∞ –º–µ—Å—è—Ü: {settings.format_price(stats.get('month_earnings_kopeks', 0))}

<b>–°—Ä–µ–¥–Ω–∏–µ –ø–æ–∫–∞–∑–∞—Ç–µ–ª–∏:</b>
- –ù–∞ –æ–¥–Ω–æ–≥–æ —Ä–µ—Ñ–µ—Ä–µ—Ä–∞: {settings.format_price(int(avg_per_referrer))}

<b>–¢–æ–ø-5 —Ä–µ—Ñ–µ—Ä–µ—Ä–æ–≤:</b>
"""
        
        top_referrers = stats.get('top_referrers', [])
        if top_referrers:
            for i, referrer in enumerate(top_referrers[:5], 1):
                earned = referrer.get('total_earned_kopeks', 0)
                count = referrer.get('referrals_count', 0)
                user_id = referrer.get('user_id', 'N/A')
                
                if count > 0:
                    text += f"{i}. ID {user_id}: {settings.format_price(earned)} ({count} —Ä–µ—Ñ.)\n"
                else:
                    logger.warning(f"–†–µ—Ñ–µ—Ä–µ—Ä {user_id} –∏–º–µ–µ—Ç {count} —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤, –Ω–æ –µ—Å—Ç—å –≤ —Ç–æ–ø–µ")
        else:
            text += "–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö\n"
        
        text += f"""

<b>–ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã:</b>
- –ú–∏–Ω–∏–º–∞–ª—å–Ω–æ–µ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–µ: {settings.format_price(settings.REFERRAL_MINIMUM_TOPUP_KOPEKS)}
- –ë–æ–Ω—É—Å –∑–∞ –ø–µ—Ä–≤–æ–µ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–µ: {settings.format_price(settings.REFERRAL_FIRST_TOPUP_BONUS_KOPEKS)}
- –ë–æ–Ω—É—Å –ø—Ä–∏–≥–ª–∞—Å–∏–≤—à–µ–º—É: {settings.format_price(settings.REFERRAL_INVITER_BONUS_KOPEKS)}
- –ë–æ–Ω—É—Å –Ω–æ–≤–æ–º—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é: {settings.format_price(settings.get_referred_user_reward_kopeks())}
- –ö–æ–º–∏—Å—Å–∏—è —Å –ø–æ–∫—É–ø–æ–∫: {settings.REFERRAL_COMMISSION_PERCENT}%
- –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è: {'‚úÖ –í–∫–ª—é—á–µ–Ω—ã' if settings.REFERRAL_NOTIFICATIONS_ENABLED else '‚ùå –û—Ç–∫–ª—é—á–µ–Ω—ã'}

<i>üïê –û–±–Ω–æ–≤–ª–µ–Ω–æ: {current_time}</i>
"""
        
        keyboard = types.InlineKeyboardMarkup(inline_keyboard=[
            [types.InlineKeyboardButton(text="üîÑ –û–±–Ω–æ–≤–∏—Ç—å", callback_data="admin_referrals")],
            [types.InlineKeyboardButton(text="üë• –¢–æ–ø —Ä–µ—Ñ–µ—Ä–µ—Ä–æ–≤", callback_data="admin_referrals_top")],
            [types.InlineKeyboardButton(text="‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏", callback_data="admin_referrals_settings")],
            [types.InlineKeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="admin_panel")]
        ])
        
        try:
            await callback.message.edit_text(text, reply_markup=keyboard)
            await callback.answer("–û–±–Ω–æ–≤–ª–µ–Ω–æ")
        except Exception as edit_error:
            if "message is not modified" in str(edit_error):
                await callback.answer("–î–∞–Ω–Ω—ã–µ –∞–∫—Ç—É–∞–ª—å–Ω—ã")
            else:
                logger.error(f"–û—à–∏–±–∫–∞ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏—è: {edit_error}")
                await callback.answer("–û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è")
        
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –≤ show_referral_statistics: {e}", exc_info=True)
        
        current_time = datetime.datetime.now().strftime("%H:%M:%S")
        text = f"""
ü§ù <b>–†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞</b>

‚ùå <b>–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö</b>

<b>–¢–µ–∫—É—â–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏:</b>
- –ú–∏–Ω–∏–º–∞–ª—å–Ω–æ–µ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–µ: {settings.format_price(settings.REFERRAL_MINIMUM_TOPUP_KOPEKS)}
- –ë–æ–Ω—É—Å –∑–∞ –ø–µ—Ä–≤–æ–µ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–µ: {settings.format_price(settings.REFERRAL_FIRST_TOPUP_BONUS_KOPEKS)}
- –ë–æ–Ω—É—Å –ø—Ä–∏–≥–ª–∞—Å–∏–≤—à–µ–º—É: {settings.format_price(settings.REFERRAL_INVITER_BONUS_KOPEKS)}
- –ë–æ–Ω—É—Å –Ω–æ–≤–æ–º—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é: {settings.format_price(settings.get_referred_user_reward_kopeks())}
- –ö–æ–º–∏—Å—Å–∏—è —Å –ø–æ–∫—É–ø–æ–∫: {settings.REFERRAL_COMMISSION_PERCENT}%

<i>üïê –í—Ä–µ–º—è: {current_time}</i>
"""
        
        keyboard = types.InlineKeyboardMarkup(inline_keyboard=[
            [types.InlineKeyboardButton(text="üîÑ –ü–æ–≤—Ç–æ—Ä–∏—Ç—å", callback_data="admin_referrals")],
            [types.InlineKeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="admin_panel")]
        ])
        
        try:
            await callback.message.edit_text(text, reply_markup=keyboard)
        except:
            pass
        await callback.answer("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏")


@admin_required
@error_handler
async def show_top_referrers(
    callback: types.CallbackQuery,
    db_user: User,
    db: AsyncSession
):
    try:
        stats = await get_referral_statistics(db)
        top_referrers = stats.get('top_referrers', [])
        
        text = "üèÜ <b>–¢–æ–ø —Ä–µ—Ñ–µ—Ä–µ—Ä–æ–≤</b>\n\n"
        
        if top_referrers:
            for i, referrer in enumerate(top_referrers[:20], 1): 
                earned = referrer.get('total_earned_kopeks', 0)
                count = referrer.get('referrals_count', 0)
                display_name = referrer.get('display_name', 'N/A')
                username = referrer.get('username', '')
                telegram_id = referrer.get('telegram_id', 'N/A')
                
                if username:
                    display_text = f"@{username} (ID{telegram_id})"
                elif display_name and display_name != f"ID{telegram_id}":
                    display_text = f"{display_name} (ID{telegram_id})"
                else:
                    display_text = f"ID{telegram_id}"
                
                emoji = ""
                if i == 1:
                    emoji = "ü•á "
                elif i == 2:
                    emoji = "ü•à "
                elif i == 3:
                    emoji = "ü•â "
                
                text += f"{emoji}{i}. {display_text}\n"
                text += f"   üí∞ {settings.format_price(earned)} | üë• {count} —Ä–µ—Ñ.\n\n"
        else:
            text += "–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –æ —Ä–µ—Ñerer–∞—Ö\n"
        
        keyboard = types.InlineKeyboardMarkup(inline_keyboard=[
            [types.InlineKeyboardButton(text="‚¨ÖÔ∏è –ö —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–µ", callback_data="admin_referrals")]
        ])
        
        await callback.message.edit_text(text, reply_markup=keyboard)
        await callback.answer()
        
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –≤ show_top_referrers: {e}", exc_info=True)
        await callback.answer("–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ç–æ–ø–∞ —Ä–µ—Ñ–µ—Ä–µ—Ä–æ–≤")


@admin_required
@error_handler
async def show_referral_settings(
    callback: types.CallbackQuery,
    db_user: User,
    db: AsyncSession
):
    text = f"""
‚öôÔ∏è <b>–ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã</b>

<b>–ë–æ–Ω—É—Å—ã –∏ –Ω–∞–≥—Ä–∞–¥—ã:</b>
‚Ä¢ –ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Å—É–º–º–∞ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è –¥–ª—è —É—á–∞—Å—Ç–∏—è: {settings.format_price(settings.REFERRAL_MINIMUM_TOPUP_KOPEKS)}
‚Ä¢ –ë–æ–Ω—É—Å –∑–∞ –ø–µ—Ä–≤–æ–µ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–µ —Ä–µ—Ñ–µ—Ä–∞–ª–∞: {settings.format_price(settings.REFERRAL_FIRST_TOPUP_BONUS_KOPEKS)}
‚Ä¢ –ë–æ–Ω—É—Å –ø—Ä–∏–≥–ª–∞—Å–∏–≤—à–µ–º—É –∑–∞ –ø–µ—Ä–≤–æ–µ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–µ: {settings.format_price(settings.REFERRAL_INVITER_BONUS_KOPEKS)}
‚Ä¢ –ë–æ–Ω—É—Å –Ω–æ–≤–æ–º—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –ø—Ä–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏: {settings.format_price(settings.get_referred_user_reward_kopeks())}

<b>–ö–æ–º–∏—Å—Å–∏–æ–Ω–Ω—ã–µ:</b>
‚Ä¢ –ü—Ä–æ—Ü–µ–Ω—Ç —Å –∫–∞–∂–¥–æ–π –ø–æ–∫—É–ø–∫–∏ —Ä–µ—Ñ–µ—Ä–∞–ª–∞: {settings.REFERRAL_COMMISSION_PERCENT}%

<b>–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è:</b>
‚Ä¢ –°—Ç–∞—Ç—É—Å: {'‚úÖ –í–∫–ª—é—á–µ–Ω—ã' if settings.REFERRAL_NOTIFICATIONS_ENABLED else '‚ùå –û—Ç–∫–ª—é—á–µ–Ω—ã'}
‚Ä¢ –ü–æ–ø—ã—Ç–∫–∏ –æ—Ç–ø—Ä–∞–≤–∫–∏: {getattr(settings, 'REFERRAL_NOTIFICATION_RETRY_ATTEMPTS', 3)}

<i>üí° –î–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–∫ –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä—É–π—Ç–µ —Ñ–∞–π–ª .env –∏ –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ –±–æ—Ç–∞</i>
"""
    
    keyboard = types.InlineKeyboardMarkup(inline_keyboard=[
        [types.InlineKeyboardButton(text="‚¨ÖÔ∏è –ö —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–µ", callback_data="admin_referrals")]
    ])
    
    await callback.message.edit_text(text, reply_markup=keyboard)
    await callback.answer()


def register_handlers(dp: Dispatcher):
    dp.callback_query.register(show_referral_statistics, F.data == "admin_referrals")
    dp.callback_query.register(show_top_referrers, F.data == "admin_referrals_top")
    dp.callback_query.register(show_referral_settings, F.data == "admin_referrals_settings")
